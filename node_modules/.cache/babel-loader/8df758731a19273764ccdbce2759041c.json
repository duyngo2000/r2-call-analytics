{"ast":null,"code":"var _jsxFileName = \"F:\\\\Gcall-code\\\\my-app\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useRef } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { url, urlList } from \"../contants/url\";\nimport { tadaData } from \"../contants/addData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n`;\n_c = Container;\nconst WrapperToast = styled.div`\n  position: fixed;\n  top: 10px;\n  right: 10px;\n`;\n_c2 = WrapperToast;\nconst Wrapper = styled.div`\n  background-color: #fff;\n  width: 30%;\n  height: 300px;\n  margin: 0 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c3 = Wrapper;\nconst Item = styled.div`\n  margin-bottom: 15px;\n`;\nconst Title = styled.label`\n  display: block;\n`;\nconst Input = styled.input`\n  width: 300px;\n  height: 30px;\n`;\nconst Table = styled.table`\n  padding: 0;\n  width: 60%;\n`;\n_c4 = Table;\nconst Tr = styled.tr`\n  border: 1px solid #fff;\n`;\n_c5 = Tr;\nconst Th = styled.th`\n  border: 1px solid #fff;\n`;\n_c6 = Th;\nconst Td = styled.td`\n  border: 1px solid #fff;\n`;\n_c7 = Td;\nconst Button = styled.button`\n  width: 300px;\n  height: 40px;\n  cursor: pointer;\n`;\n\nconst Home = () => {\n  _s();\n\n  const [listAudioID, setListAudioID] = useState([]);\n  const [postData, setPostData] = useState();\n  const [count, setCount] = useState(0);\n  const [fileName, setFileName] = useState(\"\");\n  const [abc, setAbc] = useState([]);\n  const [listData, setListData] = useState([]);\n  const index = useRef(0);\n  useEffect(() => {\n    fetch(urlList).then(response => response.json()).then(json => {\n      setListAudioID(json);\n    }).catch(err => {\n      getAllDataIndexDB();\n      console.log(\"Request Failed\", err);\n    });\n  }, []);\n  useEffect(() => {\n    for (const data of listAudioID) {\n      fetch(url + data).then(response => response.json()).then(json => {\n        addManyDataIndexDB(json);\n      }).catch(err => {\n        getAllDataIndexDB();\n        console.log(\"Request Failed\", err);\n      });\n    }\n  }, [listAudioID]);\n\n  const getAllDataIndexDB = () => {\n    const indexedDB = window.indexedDB;\n    const request = indexedDB.open(\"cars\", 1);\n\n    request.onerror = function (e) {\n      console.error(\"error\", e);\n    };\n\n    request.onupgradeneeded = function () {\n      const db = request.result;\n      db.createObjectStore(\"cars\", {\n        keyPath: \"id\"\n      });\n    };\n\n    request.onsuccess = function () {\n      const db = request.result;\n      const transaction = db.transaction(\"cars\", \"readwrite\");\n      const store = transaction.objectStore(\"cars\");\n      const getAllDataIndexDB = store.getAll();\n\n      getAllDataIndexDB.onsuccess = function () {\n        console.log(\"getAllDataIndexDB.result\", getAllDataIndexDB.result);\n        setListData(getAllDataIndexDB.result);\n      };\n\n      transaction.oncomplete = function () {\n        db.close();\n      };\n    };\n  };\n\n  const backgroundSyncAdd = () => {\n    navigator.serviceWorker.ready.then(swRegistration => swRegistration.sync.register(\"post-data\").catch(err => console.log(err)));\n  };\n\n  const addData = (data, post, deleted) => {\n    const indexedDB = window.indexedDB;\n    const request = indexedDB.open(\"cars\", 1);\n\n    request.onerror = function (e) {\n      console.error(\"error\");\n      console.error(e);\n    };\n\n    request.onupgradeneeded = function () {\n      const db = request.result;\n      const store = db.createObjectStore(\"cars\", {\n        keyPath: \"id\"\n      });\n      store.createIndex(\"cars_colour\", [\"colour\"], {\n        unique: false\n      });\n      store.createIndex(\"cars_colour_make\", [\"colour\", \"make\"], {\n        unique: false\n      });\n    };\n\n    request.onsuccess = function () {\n      const db = request.result;\n      const transaction = db.transaction(\"cars\", \"readwrite\");\n      const store = transaction.objectStore(\"cars\");\n      store.put({\n        id: data.audioID,\n        data: data,\n        post: post,\n        delete: deleted\n      });\n\n      transaction.oncomplete = function () {\n        db.close();\n      };\n    };\n  };\n\n  const addManyDataIndexDB = data => {\n    console.log(data);\n    const indexedDB = window.indexedDB;\n    const request = indexedDB.open(\"cars\", 1);\n\n    request.onerror = function (e) {\n      console.error(\"error\");\n    };\n\n    request.onupgradeneeded = function () {\n      const db = request.result;\n      db.createObjectStore(\"cars\", {\n        keyPath: \"id\",\n        autoIncrement: true\n      });\n    };\n\n    request.onsuccess = function () {\n      const db = request.result;\n      const transaction = db.transaction(\"cars\", \"readwrite\");\n      const store = transaction.objectStore(\"cars\");\n      store.put({\n        id: data.audioID,\n        data: data\n      });\n      const getAllDataIndexDB = store.getAll();\n\n      getAllDataIndexDB.onsuccess = function () {\n        setListData(getAllDataIndexDB.result);\n      };\n\n      transaction.oncomplete = function () {\n        db.close();\n      };\n    };\n  };\n\n  const sendDataServer = data => {\n    console.log(\"data\", data);\n    fetch(url + fileName, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      mode: \"no-cors\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => {\n      setFileName(\"\");\n      addData(data, false, false);\n      setListData(prev => [...prev, {\n        id: fileName,\n        data: data\n      }]);\n      toast(\"Thêm dữ liệu thành công!\");\n      response.json();\n    }).then(json => console.log(json)).catch(err => {\n      console.log(err);\n      setFileName(\"\");\n      addData(data, true, false);\n      backgroundSyncAdd();\n      toast(\"Thêm dữ liệu thành công!\");\n      setListData(prev => [...prev, {\n        id: fileName,\n        data: data\n      }]);\n    });\n  };\n\n  console.log(\"listData\", listData);\n\n  const handleAdd = () => {\n    sendDataServer(tadaData(fileName));\n  }; /////////////////////////////////////////////////////////\n\n\n  const backgroundSyncDelete = () => {\n    navigator.serviceWorker.ready.then(swRegistration => swRegistration.sync.register(\"delete-data\").catch(err => console.log(err)));\n  }; // const deleteData = (id) => {\n  //   //id: 1\n  //   console.log(id)\n  //   const indexedDB = window.indexedDB\n  //   const request = indexedDB.open(\"cars\", 1)\n  //   request.onerror = function (e) {\n  //     console.error(\"error\")\n  //     console.error(e)\n  //   }\n  //   request.onupgradeneeded = function () {\n  //     const db = request.result\n  //     db.createObjectStore(\"cars\", { keyPath: \"id\" })\n  //   }\n  //   request.onsuccess = function () {\n  //     const db = request.result\n  //     const transaction = db.transaction(\"cars\", \"readwrite\")\n  //     const store = transaction.objectStore(\"cars\")\n  //     const deleteKey = store.getAll(id)\n  //     deleteKey.onsuccess = function () {\n  //       if (deleteKey.result) {\n  //         console.log(\"colourMakeQuery.result\", deleteKey.result)\n  //         console.log(\"colourMakeQuery.result.delete\", deleteKey.result.delete)\n  //         deleteKey.result.delete = true\n  //         // const updateRequest = store.update(colourMakeQuery.result)\n  //         const updateRequest = store.put(deleteKey.result)\n  //         updateRequest.onsuccess = function () {\n  //           console.log(\"update success result\", deleteKey.result)\n  //           console.log(\"update success\", deleteKey.result.delete)\n  //         }\n  //       } else {\n  //         const indexedDB = window.indexedDB\n  //         const request = indexedDB.open(\"deletecars\", 1)\n  //         request.onerror = function (e) {\n  //           console.error(\"error\")\n  //           console.error(e)\n  //         }\n  //         request.onupgradeneeded = function () {\n  //           const db = request.result\n  //           const store = db.createObjectStore(\"cars\", { keyPath: \"id\" })\n  //           store.createIndex(\"cars_colour\", [\"colour\"], { unique: false })\n  //           store.createIndex(\"cars_colour_make\", [\"colour\", \"make\"], {\n  //             unique: false,\n  //           })\n  //         }\n  //         request.onsuccess = function () {\n  //           const db = request.result\n  //           const transaction = db.transaction(\"cars\", \"readwrite\")\n  //           const store = transaction.objectStore(\"cars\")\n  //           store.put({\n  //             id: data._id,\n  //             colour: data.name,\n  //             make: data.email,\n  //           })\n  //           transaction.oncomplete = function () {\n  //             db.close()\n  //           }\n  //         }\n  //       }\n  //     }\n  //     transaction.oncomplete = function () {\n  //       db.close()\n  //     }\n  //   }\n  // }\n\n\n  const sendDeleteData = data => {\n    console.log(data); //id: 1\n\n    fetch(url + \"de-audioID_\" + data, {\n      method: \"POST\",\n      mode: \"no-cors\"\n    }).then(response => {\n      setCount(prev => prev + 1);\n      toast(\"Xóa dữ liệu thành công!\"); // setListAudioID(listAudioID.filter((item) => item !== data))\n      // deleteData(data)\n\n      response.json();\n    }).then(json => console.log(json)).catch(err => {\n      console.log(err); // deleteData(data)\n\n      backgroundSyncDelete();\n      toast(\"Xóa dữ liệu thành công!\");\n      setListAudioID(listAudioID.filter(item => item !== data));\n    });\n  };\n\n  const handleDelete = data => {\n    console.log(data);\n    index.current += 1;\n    sendDeleteData(data.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(WrapperToast, {\n      children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      border: 1,\n      children: [/*#__PURE__*/_jsxDEV(Tr, {\n        children: [/*#__PURE__*/_jsxDEV(Th, {\n          children: \"ID voice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"ID Agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"Agent name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"ID Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"Customer name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"call hold duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"call duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), listData.length >= 0 && listData.map(item => /*#__PURE__*/_jsxDEV(Tr, {\n        children: [/*#__PURE__*/_jsxDEV(Td, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `audioID_${item.data.audioID}`,\n            children: item.data.audioID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: item.data.audioCredit.agent.agentID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: item.data.audioCredit.agent.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: item.data.audioCredit.customer.customerID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: item.data.audioCredit.customer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: item.data.audioCredit.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: item.data.audioCredit.callHoldDration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: item.data.audioCredit.callDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(item),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }, this)]\n      }, item.data.audioID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"nh\\u1EADp audioID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setFileName(e.target.value),\n        value: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleAdd,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"MU0tVseKxYo9KxYa9DD5ACR5N6U=\");\n\n_c8 = Home;\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"WrapperToast\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"Table\");\n$RefreshReg$(_c5, \"Tr\");\n$RefreshReg$(_c6, \"Th\");\n$RefreshReg$(_c7, \"Td\");\n$RefreshReg$(_c8, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","styled","Link","useRef","ToastContainer","toast","url","urlList","tadaData","Container","div","WrapperToast","Wrapper","Item","Title","label","Input","input","Table","table","Tr","tr","Th","th","Td","td","Button","button","Home","listAudioID","setListAudioID","postData","setPostData","count","setCount","fileName","setFileName","abc","setAbc","listData","setListData","index","fetch","then","response","json","catch","err","getAllDataIndexDB","console","log","data","addManyDataIndexDB","indexedDB","window","request","open","onerror","e","error","onupgradeneeded","db","result","createObjectStore","keyPath","onsuccess","transaction","store","objectStore","getAll","oncomplete","close","backgroundSyncAdd","navigator","serviceWorker","ready","swRegistration","sync","register","addData","post","deleted","createIndex","unique","put","id","audioID","delete","autoIncrement","sendDataServer","method","body","JSON","stringify","mode","headers","prev","handleAdd","backgroundSyncDelete","sendDeleteData","filter","item","handleDelete","current","length","map","audioCredit","agent","agentID","name","customer","customerID","date","callHoldDration","callDuration","target","value"],"sources":["F:/Gcall-code/my-app/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useRef } from \"react\"\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport { url, urlList } from \"../contants/url\"\r\nimport { tadaData } from \"../contants/addData\"\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`\r\nconst WrapperToast = styled.div`\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 10px;\r\n`\r\nconst Wrapper = styled.div`\r\n  background-color: #fff;\r\n  width: 30%;\r\n  height: 300px;\r\n  margin: 0 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\nconst Item = styled.div`\r\n  margin-bottom: 15px;\r\n`\r\nconst Title = styled.label`\r\n  display: block;\r\n`\r\nconst Input = styled.input`\r\n  width: 300px;\r\n  height: 30px;\r\n`\r\nconst Table = styled.table`\r\n  padding: 0;\r\n  width: 60%;\r\n`\r\nconst Tr = styled.tr`\r\n  border: 1px solid #fff;\r\n`\r\nconst Th = styled.th`\r\n  border: 1px solid #fff;\r\n`\r\nconst Td = styled.td`\r\n  border: 1px solid #fff;\r\n`\r\nconst Button = styled.button`\r\n  width: 300px;\r\n  height: 40px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Home = () => {\r\n  const [listAudioID, setListAudioID] = useState([])\r\n  const [postData, setPostData] = useState()\r\n  const [count, setCount] = useState(0)\r\n  const [fileName, setFileName] = useState(\"\")\r\n  const [abc, setAbc] = useState([])\r\n  const [listData, setListData] = useState([])\r\n  const index = useRef(0)\r\n\r\n  useEffect(() => {\r\n    fetch(urlList)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setListAudioID(json)\r\n      })\r\n      .catch((err) => {\r\n        getAllDataIndexDB()\r\n        console.log(\"Request Failed\", err)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    for (const data of listAudioID) {\r\n      fetch(url + data)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          addManyDataIndexDB(json)\r\n        })\r\n        .catch((err) => {\r\n          getAllDataIndexDB()\r\n          console.log(\"Request Failed\", err)\r\n        })\r\n    }\r\n  }, [listAudioID])\r\n\r\n  const getAllDataIndexDB = () => {\r\n    const indexedDB = window.indexedDB\r\n    const request = indexedDB.open(\"cars\", 1)\r\n    request.onerror = function (e) {\r\n      console.error(\"error\", e)\r\n    }\r\n    request.onupgradeneeded = function () {\r\n      const db = request.result\r\n      db.createObjectStore(\"cars\", { keyPath: \"id\" })\r\n    }\r\n    request.onsuccess = function () {\r\n      const db = request.result\r\n      const transaction = db.transaction(\"cars\", \"readwrite\")\r\n      const store = transaction.objectStore(\"cars\")\r\n\r\n      const getAllDataIndexDB = store.getAll()\r\n      getAllDataIndexDB.onsuccess = function () {\r\n        console.log(\"getAllDataIndexDB.result\", getAllDataIndexDB.result)\r\n        setListData(getAllDataIndexDB.result)\r\n      }\r\n      transaction.oncomplete = function () {\r\n        db.close()\r\n      }\r\n    }\r\n  }\r\n\r\n  const backgroundSyncAdd = () => {\r\n    navigator.serviceWorker.ready.then((swRegistration) =>\r\n      swRegistration.sync.register(\"post-data\").catch((err) => console.log(err))\r\n    )\r\n  }\r\n\r\n  const addData = (data, post, deleted) => {\r\n    const indexedDB = window.indexedDB\r\n\r\n    const request = indexedDB.open(\"cars\", 1)\r\n    request.onerror = function (e) {\r\n      console.error(\"error\")\r\n      console.error(e)\r\n    }\r\n    request.onupgradeneeded = function () {\r\n      const db = request.result\r\n      const store = db.createObjectStore(\"cars\", { keyPath: \"id\" })\r\n      store.createIndex(\"cars_colour\", [\"colour\"], { unique: false })\r\n      store.createIndex(\"cars_colour_make\", [\"colour\", \"make\"], {\r\n        unique: false,\r\n      })\r\n    }\r\n    request.onsuccess = function () {\r\n      const db = request.result\r\n      const transaction = db.transaction(\"cars\", \"readwrite\")\r\n      const store = transaction.objectStore(\"cars\")\r\n      store.put({\r\n        id: data.audioID,\r\n        data: data,\r\n        post: post,\r\n        delete: deleted,\r\n      })\r\n\r\n      transaction.oncomplete = function () {\r\n        db.close()\r\n      }\r\n    }\r\n  }\r\n  const addManyDataIndexDB = (data) => {\r\n    console.log(data)\r\n    const indexedDB = window.indexedDB\r\n\r\n    const request = indexedDB.open(\"cars\", 1)\r\n    request.onerror = function (e) {\r\n      console.error(\"error\")\r\n    }\r\n    request.onupgradeneeded = function () {\r\n      const db = request.result\r\n      db.createObjectStore(\"cars\", { keyPath: \"id\", autoIncrement: true })\r\n    }\r\n    request.onsuccess = function () {\r\n      const db = request.result\r\n      const transaction = db.transaction(\"cars\", \"readwrite\")\r\n\r\n      const store = transaction.objectStore(\"cars\")\r\n      store.put({\r\n        id: data.audioID,\r\n        data: data,\r\n      })\r\n      const getAllDataIndexDB = store.getAll()\r\n      getAllDataIndexDB.onsuccess = function () {\r\n        setListData(getAllDataIndexDB.result)\r\n      }\r\n      transaction.oncomplete = function () {\r\n        db.close()\r\n      }\r\n    }\r\n  }\r\n\r\n  const sendDataServer = (data) => {\r\n    console.log(\"data\", data)\r\n    fetch(url + fileName, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      mode: \"no-cors\",\r\n      headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\r\n    })\r\n      .then((response) => {\r\n        setFileName(\"\")\r\n        addData(data, false, false)\r\n        setListData((prev) => [...prev, { id: fileName, data: data }])\r\n        toast(\"Thêm dữ liệu thành công!\")\r\n        response.json()\r\n      })\r\n      .then((json) => console.log(json))\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setFileName(\"\")\r\n        addData(data, true, false)\r\n        backgroundSyncAdd()\r\n        toast(\"Thêm dữ liệu thành công!\")\r\n        setListData((prev) => [...prev, { id: fileName, data: data }])\r\n      })\r\n  }\r\n  console.log(\"listData\", listData)\r\n  const handleAdd = () => {\r\n    sendDataServer(tadaData(fileName))\r\n  }\r\n  /////////////////////////////////////////////////////////\r\n\r\n  const backgroundSyncDelete = () => {\r\n    navigator.serviceWorker.ready.then((swRegistration) =>\r\n      swRegistration.sync\r\n        .register(\"delete-data\")\r\n        .catch((err) => console.log(err))\r\n    )\r\n  }\r\n\r\n  // const deleteData = (id) => {\r\n  //   //id: 1\r\n  //   console.log(id)\r\n  //   const indexedDB = window.indexedDB\r\n\r\n  //   const request = indexedDB.open(\"cars\", 1)\r\n  //   request.onerror = function (e) {\r\n  //     console.error(\"error\")\r\n  //     console.error(e)\r\n  //   }\r\n  //   request.onupgradeneeded = function () {\r\n  //     const db = request.result\r\n  //     db.createObjectStore(\"cars\", { keyPath: \"id\" })\r\n  //   }\r\n  //   request.onsuccess = function () {\r\n  //     const db = request.result\r\n  //     const transaction = db.transaction(\"cars\", \"readwrite\")\r\n\r\n  //     const store = transaction.objectStore(\"cars\")\r\n  //     const deleteKey = store.getAll(id)\r\n  //     deleteKey.onsuccess = function () {\r\n  //       if (deleteKey.result) {\r\n  //         console.log(\"colourMakeQuery.result\", deleteKey.result)\r\n  //         console.log(\"colourMakeQuery.result.delete\", deleteKey.result.delete)\r\n  //         deleteKey.result.delete = true\r\n  //         // const updateRequest = store.update(colourMakeQuery.result)\r\n  //         const updateRequest = store.put(deleteKey.result)\r\n  //         updateRequest.onsuccess = function () {\r\n  //           console.log(\"update success result\", deleteKey.result)\r\n  //           console.log(\"update success\", deleteKey.result.delete)\r\n  //         }\r\n  //       } else {\r\n  //         const indexedDB = window.indexedDB\r\n\r\n  //         const request = indexedDB.open(\"deletecars\", 1)\r\n  //         request.onerror = function (e) {\r\n  //           console.error(\"error\")\r\n  //           console.error(e)\r\n  //         }\r\n  //         request.onupgradeneeded = function () {\r\n  //           const db = request.result\r\n  //           const store = db.createObjectStore(\"cars\", { keyPath: \"id\" })\r\n  //           store.createIndex(\"cars_colour\", [\"colour\"], { unique: false })\r\n  //           store.createIndex(\"cars_colour_make\", [\"colour\", \"make\"], {\r\n  //             unique: false,\r\n  //           })\r\n  //         }\r\n  //         request.onsuccess = function () {\r\n  //           const db = request.result\r\n  //           const transaction = db.transaction(\"cars\", \"readwrite\")\r\n\r\n  //           const store = transaction.objectStore(\"cars\")\r\n\r\n  //           store.put({\r\n  //             id: data._id,\r\n  //             colour: data.name,\r\n  //             make: data.email,\r\n  //           })\r\n\r\n  //           transaction.oncomplete = function () {\r\n  //             db.close()\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     }\r\n\r\n  //     transaction.oncomplete = function () {\r\n  //       db.close()\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  const sendDeleteData = (data) => {\r\n    console.log(data) //id: 1\r\n    fetch(url + \"de-audioID_\" + data, {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n    })\r\n      .then((response) => {\r\n        setCount((prev) => prev + 1)\r\n        toast(\"Xóa dữ liệu thành công!\")\r\n        // setListAudioID(listAudioID.filter((item) => item !== data))\r\n        // deleteData(data)\r\n        response.json()\r\n      })\r\n      .then((json) => console.log(json))\r\n      .catch((err) => {\r\n        console.log(err)\r\n        // deleteData(data)\r\n        backgroundSyncDelete()\r\n        toast(\"Xóa dữ liệu thành công!\")\r\n        setListAudioID(listAudioID.filter((item) => item !== data))\r\n      })\r\n  }\r\n\r\n  const handleDelete = (data) => {\r\n    console.log(data)\r\n    index.current += 1\r\n    sendDeleteData(data.id)\r\n  }\r\n  return (\r\n    <Container>\r\n      <WrapperToast>\r\n        <ToastContainer />\r\n      </WrapperToast>\r\n      {/* <Table border={1}>\r\n        <Tr>\r\n          <Th>ID</Th>\r\n          <Th>name</Th>\r\n          <Th>email</Th>\r\n          <Th>content</Th>\r\n          <Th>created at</Th>\r\n        </Tr>\r\n        {listAudioID.length >= 0 &&\r\n          listAudioID.map((item) => (\r\n            <Tr key={item._id}>\r\n              <Td>\r\n                <Link to={`audioID=${item._id}`}>{item._id}</Link>\r\n              </Td>\r\n              <Td>{item.name}</Td>\r\n              <Td>{item.email}</Td>\r\n              <Td>{item.content}</Td>\r\n              <Td>{item.createdAt}</Td>\r\n              <Td>\r\n                <button onClick={() => handleDelete(item)}>X</button>{\" \"}\r\n              </Td>\r\n            </Tr>\r\n          ))}\r\n      </Table>\r\n      <Wrapper>\r\n        <Item>\r\n          <Title>Name</Title>\r\n          <Input\r\n            onChange={(e) => {\r\n              setPostData({\r\n                name: e.target.value,\r\n                email: postData.email,\r\n                content: postData.content,\r\n                delete: false,\r\n              })\r\n            }}\r\n            value={postData.name}\r\n          />\r\n        </Item>\r\n        <Item>\r\n          <Title>Email</Title>\r\n          <Input\r\n            onChange={(e) => {\r\n              setPostData({\r\n                name: postData.name,\r\n                email: e.target.value,\r\n                content: postData.content,\r\n                delete: false,\r\n              })\r\n            }}\r\n            value={postData.email}\r\n          />\r\n        </Item>\r\n        <Item>\r\n          <Title>Content</Title>\r\n          <Input\r\n            onChange={(e) =>\r\n              setPostData({\r\n                name: postData.name,\r\n                email: postData.email,\r\n                content: e.target.value,\r\n                delete: false,\r\n              })\r\n            }\r\n            value={postData.content}\r\n          />\r\n        </Item>\r\n        <Button onClick={handleAdd}>add</Button>\r\n      </Wrapper> */}\r\n      <Table border={1}>\r\n        <Tr>\r\n          <Th>ID voice</Th>\r\n          <Th>ID Agent</Th>\r\n          <Th>Agent name</Th>\r\n          <Th>ID Customer</Th>\r\n          <Th>Customer name</Th>\r\n          <Th>date</Th>\r\n          <Th>call hold duration</Th>\r\n          <Th>call duration</Th>\r\n        </Tr>\r\n        {listData.length >= 0 &&\r\n          listData.map((item) => (\r\n            <Tr key={item.data.audioID}>\r\n              <Td>\r\n                <Link to={`audioID_${item.data.audioID}`}>\r\n                  {item.data.audioID}\r\n                </Link>\r\n              </Td>\r\n              <Td>{item.data.audioCredit.agent.agentID}</Td>\r\n              <Td>{item.data.audioCredit.agent.name}</Td>\r\n              <Td>{item.data.audioCredit.customer.customerID}</Td>\r\n              <Td>{item.data.audioCredit.customer.name}</Td>\r\n              <Td>{item.data.audioCredit.date}</Td>\r\n              <Td>{item.data.audioCredit.callHoldDration}</Td>\r\n              <Td>{item.data.audioCredit.callDuration}</Td>\r\n              <Td>\r\n                <button onClick={() => handleDelete(item)}>X</button>{\" \"}\r\n              </Td>\r\n            </Tr>\r\n          ))}\r\n      </Table>\r\n      <Wrapper>\r\n        <label htmlFor=\"\">nhập audioID</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setFileName(e.target.value)}\r\n          value={fileName}\r\n        />\r\n        <button type=\"submit\" onClick={handleAdd}>\r\n          add\r\n        </button>{\" \"}\r\n      </Wrapper>\r\n      {/*<Table border={1}>\r\n        <Tr>\r\n          <Th>ID voice</Th>\r\n        </Tr>\r\n        {listAudioID.length >= 0 &&\r\n          listAudioID.map((item) => (\r\n            <Tr key={item}>\r\n              <Td>\r\n                <Link to={`${item}`}>{item}</Link>\r\n              </Td>\r\n              <Td>\r\n                <button onClick={() => handleDelete(item)}>X</button>{\" \"}\r\n              </Td>\r\n            </Tr>\r\n          ))}\r\n      </Table> */}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}