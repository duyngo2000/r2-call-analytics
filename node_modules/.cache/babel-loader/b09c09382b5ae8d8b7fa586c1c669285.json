{"ast":null,"code":"var _jsxFileName = \"F:\\\\Gcall-code\\\\my-app\\\\src\\\\components\\\\Phrases.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Title } from \"./contants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  margin: 0 -10px;\n  height: calc(100% + 5px);\n  background-color: red;\n  overflow: scroll;\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n`;\n_c = Wrapper;\nconst Wrapper1 = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex: 1;\n  margin: 0 5px;\n`;\n_c2 = Wrapper1;\nconst Wrapper2 = styled.div`\n  border: 1px solid #ccc;\n  padding: 0 5px;\n  border-radius: 8px;\n`;\n_c3 = Wrapper2;\nconst Wrapper3 = styled.div``;\n_c4 = Wrapper3;\nconst Ul = styled.div``;\n_c5 = Ul;\nconst Li = styled.div``;\n_c6 = Li;\n\nconst Phrases = _ref => {\n  let {\n    data\n  } = _ref;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Wrapper1, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Agent Phrases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Wrapper2, {\n          children: /*#__PURE__*/_jsxDEV(Wrapper3, {\n            children: /*#__PURE__*/_jsxDEV(Ul, {\n              children: JSON.stringify(data) !== \"{}\" && data.audioMatch.rules.map(item => item.key.map((item2, index) => /*#__PURE__*/_jsxDEV(Li, {\n                children: item2.agent\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 23\n              }, this)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper1, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Customer Phrases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Wrapper2, {\n          children: /*#__PURE__*/_jsxDEV(Wrapper3, {\n            children: /*#__PURE__*/_jsxDEV(Ul, {\n              children: JSON.stringify(data) !== \"{}\" && data.audioMatch.rules.map(item => item.key.map((item2, index) => /*#__PURE__*/_jsxDEV(Li, {\n                children: item2.customer\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c7 = Phrases;\nexport default Phrases;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Wrapper1\");\n$RefreshReg$(_c3, \"Wrapper2\");\n$RefreshReg$(_c4, \"Wrapper3\");\n$RefreshReg$(_c5, \"Ul\");\n$RefreshReg$(_c6, \"Li\");\n$RefreshReg$(_c7, \"Phrases\");","map":{"version":3,"names":["React","styled","Container","Title","Wrapper","div","Wrapper1","Wrapper2","Wrapper3","Ul","Li","Phrases","data","console","log","JSON","stringify","audioMatch","rules","map","item","key","item2","index","agent","customer"],"sources":["F:/Gcall-code/my-app/src/components/Phrases.jsx"],"sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Container, Title } from \"./contants\"\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 0 -10px;\r\n  height: calc(100% + 5px);\r\n  background-color: red;\r\n  overflow: scroll;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: relative;\r\n`\r\nconst Wrapper1 = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex: 1;\r\n  margin: 0 5px;\r\n`\r\nconst Wrapper2 = styled.div`\r\n  border: 1px solid #ccc;\r\n  padding: 0 5px;\r\n  border-radius: 8px;\r\n`\r\nconst Wrapper3 = styled.div``\r\nconst Ul = styled.div``\r\nconst Li = styled.div``\r\nconst Phrases = ({ data }) => {\r\n  console.log(data)\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <Wrapper1>\r\n          <Title>Agent Phrases</Title>\r\n          <Wrapper2>\r\n            <Wrapper3>\r\n              <Ul>\r\n                {JSON.stringify(data) !== \"{}\" &&\r\n                  data.audioMatch.rules.map((item) =>\r\n                    item.key.map((item2, index) => (\r\n                      <Li key={index}>{item2.agent}</Li>\r\n                    ))\r\n                  )}\r\n              </Ul>\r\n            </Wrapper3>\r\n          </Wrapper2>\r\n        </Wrapper1>\r\n        <Wrapper1>\r\n          <Title>Customer Phrases</Title>\r\n          <Wrapper2>\r\n            <Wrapper3>\r\n              <Ul>\r\n                {JSON.stringify(data) !== \"{}\" &&\r\n                  data.audioMatch.rules.map((item) =>\r\n                    item.key.map((item2, index) => (\r\n                      <Li key={index}>{item2.customer}</Li>\r\n                    ))\r\n                  )}\r\n              </Ul>\r\n            </Wrapper3>\r\n          </Wrapper2>\r\n        </Wrapper1>\r\n      </Wrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Phrases\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,O;AASN,MAAME,QAAQ,GAAGL,MAAM,CAACI,GAAI;AAC5B;AACA;AACA;AACA;AACA,CALA;MAAMC,Q;AAMN,MAAMC,QAAQ,GAAGN,MAAM,CAACI,GAAI;AAC5B;AACA;AACA;AACA,CAJA;MAAME,Q;AAKN,MAAMC,QAAQ,GAAGP,MAAM,CAACI,GAAI,EAA5B;MAAMG,Q;AACN,MAAMC,EAAE,GAAGR,MAAM,CAACI,GAAI,EAAtB;MAAMI,E;AACN,MAAMC,EAAE,GAAGT,MAAM,CAACI,GAAI,EAAtB;MAAMK,E;;AACN,MAAMC,OAAO,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC5BC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,OAAD;MAAA,wBACE,QAAC,QAAD;QAAA,wBACE,QAAC,KAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,QAAD;UAAA,uBACE,QAAC,QAAD;YAAA,uBACE,QAAC,EAAD;cAAA,UACGG,IAAI,CAACC,SAAL,CAAeJ,IAAf,MAAyB,IAAzB,IACCA,IAAI,CAACK,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA2BC,IAAD,IACxBA,IAAI,CAACC,GAAL,CAASF,GAAT,CAAa,CAACG,KAAD,EAAQC,KAAR,kBACX,QAAC,EAAD;gBAAA,UAAiBD,KAAK,CAACE;cAAvB,GAASD,KAAT;gBAAA;gBAAA;gBAAA;cAAA,QADF,CADF;YAFJ;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAgBE,QAAC,QAAD;QAAA,wBACE,QAAC,KAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,QAAD;UAAA,uBACE,QAAC,QAAD;YAAA,uBACE,QAAC,EAAD;cAAA,UACGR,IAAI,CAACC,SAAL,CAAeJ,IAAf,MAAyB,IAAzB,IACCA,IAAI,CAACK,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA2BC,IAAD,IACxBA,IAAI,CAACC,GAAL,CAASF,GAAT,CAAa,CAACG,KAAD,EAAQC,KAAR,kBACX,QAAC,EAAD;gBAAA,UAAiBD,KAAK,CAACG;cAAvB,GAASF,KAAT;gBAAA;gBAAA;gBAAA;cAAA,QADF,CADF;YAFJ;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD,CAtCD;;MAAMZ,O;AAwCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}